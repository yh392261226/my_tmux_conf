################################# KEY BINDINGS #################################
# Note: that the -n means we can ignore the ctrl-a prefix

# Set Ctrl-b as the default prefix
set-option -g prefix C-b

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Reload the tmux file
bind r source-file "$tmux_dir/tmux.conf"    # Displays "Tmux reloaded!"

# Windows
bind w kill-window
bind -n S-Left  previous-window
bind -n S-Right next-window

# Move Windows
bind -n C-S-Left swap-window -t -1\; select-window -t -1 
bind -n C-S-Right swap-window -t +1\; select-window -t +1 

# Split panes
bind - split-window -v               # Horizontal
bind / split-window -h               # Vertical
bind k kill-pane -a                  # Kill all panes except for the current one

###################################### VIM #####################################

# Tmux doesn't pass <S-CR> codes to Neovim
# https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
bind -n S-Enter send-keys Escape "[13;2u"

# Smart pane switching with awareness of Vim splits.
# From https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n 'C-j' if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n 'C-k' if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n 'C-l' if-shell "$is_vim" "send-keys C-l" "select-pane -R"
